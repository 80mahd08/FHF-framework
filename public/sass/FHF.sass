
@use 'tools/functions' as *
@use 'tools/var' as *

@import 'tools/norm'

.centerPosition
    position: absolute
    left: 50%
    top: 50%
    transform: translate(-50% , -50%)

.textCenter
    text-align: center
.textLeft
    text-align: left
.textRight
    text-align: right

.clearFix
    &::after , &::before
        content: " "
        display: table
    &::after
        clear: both
    *zoom: 1

.container
    margin: auto
    padding:
        left: 15px
        right: 15px

.flex-container
    display: flex
    flex-wrap: wrap
    .flex-item
        flex: 1 0 300px

.visibleXs,
.visibleSm,
.visibleMd,
.visibleLg
    display: none

.floatLeft
    float: left

.floatRight
    float: right

.respH1
    font-size: clamp(32px, 4vw, 48px)
.respH2
    font-size: clamp(24px, 3vw, 36px)
.respH3
    font-size: clamp(20px, 2.5vw, 30px)
.respH4
    font-size: clamp(20px, 2.5vw, 30px)
.respH5
    font-size: clamp(16px, 2vw, 20px)
.respH6
    font-size: clamp(14px, 1.5vw, 18px)
.respP
    font-size: clamp(16px, 1.2vw, 20px)
.resImg
    max-width: 100%
    height: auto
.resVideo
    max-width: 100%
    height: auto

@for $i from 100 through 500
    .respGridFill-#{$i}
        display: grid
        grid-template-columns: repeat(auto-fill , minmax(#{$i} + "px" , 1fr) )
    .respGridFit-#{$i}
        display: grid
        grid-template-columns: repeat(auto-fit , minmax(#{$i} + "px" , 1fr) )

.unstyledList
    list-style: none
    margin: 0
    padding: 0

.navStyle
    display: flex
    justify-content: space-between

.centerContentFlex
    display: flex
    justify-content: center
    align-items: center

.circle
    border-radius: 50%

.dispNone
    display: none

.resBackgImg
    background-size: cover
    background-repeat: no-repeat
    background-position: center

@each $color in $colors
    .font#{firstLetterUpper($color)}
        color: #{$color}
    .bg#{firstLetterUpper($color)}
        background-color: #{$color}
    @for $i from 1 through 100
        .border#{firstLetterUpper($color)}-#{$i}
            border: #{$i+"px"} solid #{$color}

@for $i from 1 through 100
    .margin-#{$i}
        margin: #{$i + "px"}
    .marginTop-#{$i}
        margin-top: #{$i + "px"}
    .marginBottom-#{$i}
        margin-bottom: #{$i + "px"}
    .marginRight-#{$i}
        margin-right: #{$i + "px"}
    .marginLeft-#{$i}
        margin-left: #{$i + "px"}
    .padding-#{$i}
        padding: #{$i + "px"}
    .paddingTop-#{$i}
        padding-top: #{$i + "px"}
    .paddingBottom-#{$i}
        padding-bottom: #{$i + "px"}
    .paddingRight-#{$i}
        padding-right: #{$i + "px"}
    .paddingLeft-#{$i}
        padding-left: #{$i + "px"}
    @for $j from 1 through 100
        .respMargin-#{$i}-#{$j}
            margin: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respMarginTop-#{$i}-#{$j}
            margin-top: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respMarginBottom-#{$i}-#{$j}
            margin-bottom: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respMarginRight-#{$i}-#{$j}
            margin-right: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respMarginLeft-#{$i}-#{$j}
            margin-left: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respPadding-#{$i}-#{$j}
            padding: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respPaddingTop-#{$i}-#{$j}
            padding-top: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respPaddingBottom-#{$i}-#{$j}
            padding-bottom: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respPaddingRight-#{$i}-#{$j}
            padding-right: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
        .respPaddingLeft-#{$i}-#{$j}
            padding-left: clamp(#{$i + "px"} , 5vw , #{$j + "px"})
.marginNone
    margin: 0
.paddingNone
    padding: 0
.margCenter
    margin: 0 auto

@each $style in $textDecorationStyles
    .textDeco-#{$style}
        text-decoration: $style

@each $style in $textTransformStyles
    .textTrans-#{$style}
        text-transform: $style

$borderRadiusCont: 5
@each $borderRName in $BordeRadiusNames
    .#{$borderRName}
        border-radius: #{$borderRadiusCont}px
    $borderRadiusCont: $borderRadiusCont + 20

@for $i from $minWidth through $maxWidth
  $percent: math.div(($i - $minWidth), ($maxWidth - $minWidth))
  $width: "width: calc(#{$i}px + #{$percent * (100vw - #{$maxWidth}px)})"
  $height: "height: calc(#{$i}px + #{$percent * (100vh - #{$maxWidth}px)})"

  .respWi-#{$i} 
    #{$width}
  

  .respHe-#{$i} 
    #{$height}
  


This code uses the math.div() function to perform the division inside the loop, and also wraps the resulting width and height values inside a string and uses the #{$} syntax to interpolate variables inside the calc() function.

.flex
    display: flex

.transBg
    background-color: transparent

@import 'tools/_media.query'
