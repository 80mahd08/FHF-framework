/* Base Utilities */
@use "../tools/_variables" as *;
@use "../tools/_functions" as *;
@use "../tools/mixins" as *;

/* Object Fit */
.object-contain {
  object-fit: contain;
}

.object-cover {
  object-fit: cover;
}

.object-fill {
  object-fit: fill;
}

.object-none {
  object-fit: none;
}

.object-scale-down {
  object-fit: scale-down;
}

/* Positioning */
@for $i from 1 through 20 {
  .tp-#{$i} {
    top: 0.5rem * $i;
  }
  .rh-#{$i} {
    right: 0.5rem * $i;
  }
  .bt-#{$i} {
    bottom: 0.5rem * $i;
  }
  .lf-#{$i} {
    left: 0.5rem * $i;
  }
}
/* Z-index */
@for $i from 0 through 50 {
  .z-index-#{$i} {
    z-index: $i;
  }
}

.z-index-auto {
  z-index: auto;
}

/* Visibility */
// Media queries for different screen sizes
$breakpoints: (
  "xs": 0px,
  // Extra small screens
  "sm": 768px,
  // Small screens
  "md": 992px,
  // Medium screens
  "lg": 1200px // Large screens,,,,,,,,
);

// Generate visibility classes
@each $breakpoint, $min-width in $breakpoints {
  @if $breakpoint == "xs" {
    .visible-xs {
      display: block !important; // Visible on extra small screens
    }
    .hidden-xs {
      display: none !important; // Hidden on extra small screens
    }
  } @else {
    .visible-#{$breakpoint} {
      @media (min-width: $min-width) {
        display: block !important; // Visible on screens of the specified size
      }
    }
    .hidden-#{$breakpoint} {
      @media (min-width: $min-width) {
        display: none !important; // Hidden on screens of the specified size
      }
    }
  }
}

/* Overflow */
.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-visible {
  overflow: visible;
}

.overflow-scroll {
  overflow: scroll;
}

/* Opacity */
@for $i from 0 through 100 {
  .opacity-#{$i} {
    opacity: calc($i / 100);
  }
}

/* Cursor */
.cursor-pointer {
  cursor: pointer;
}

.cursor-default {
  cursor: default;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.cursor-wait {
  cursor: wait;
}
