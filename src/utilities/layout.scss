@use "./../tools/media_query" as *;
@use "./../tools//variables" as *;

/* Layout Utilities */
.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 20px;

	// Apply styles for large screens
	@include respond-to(large) {
		max-width: 1000px;
	}

	// Apply styles for medium screens
	@include respond-to(medium) {
		max-width: 800px;
		padding: 15px;
	}

	// Apply styles for small screens
	@include respond-to(small) {
		max-width: 100%;
		padding: 10px;
	}
}

/* Responsive Grid Utilities */
@for $i from 100 through 500 {
	.respGridFill-#{$i} {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(#{$i}px, 1fr));
	}
	.respGridFit-#{$i} {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(#{$i}px, 1fr));
	}
}

/* Floats */
.float-left {
	float: left;
}

.float-right {
	float: right;
}

/* Clearfix */
.clear-fix {
	&:after,
	&:before {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
	*zoom: 1; /* IE 6/7 */
}

/* Display */
.d-block {
	display: block;
}

.d-inline-block {
	display: inline-block;
}

.d-inline {
	display: inline;
}

.d-none {
	display: none;
}

// Loop for gap utilities
@each $key, $value in $gap-values {
	.gap-#{$key} {
		gap: $value;
	}
	.gap-x-#{$key} {
		column-gap: $value;
	}
	.gap-y-#{$key} {
		row-gap: $value;
	}
}
